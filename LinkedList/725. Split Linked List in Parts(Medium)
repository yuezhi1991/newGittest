//https://leetcode.com/problems/split-linked-list-in-parts/solutions/4009692/easy-to-understand-java

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode cur=head;
        int N=0;
        while (cur!=null){
            cur=cur.next;
            N++;
        }
        int res=N/k, rem=N%k;
        ListNode[] ans=new ListNode[k];
        cur=head;
        for(int i=0;i<k;++i){
            ListNode head1=new ListNode(0),write=head1;
            for(int j=0;j<res+(i<rem?1:0);++j){
                write=write.next=new ListNode(cur.val);
                if(cur!=null) cur=cur.next;
            }
            ans[i]=head1.next;
        }
        return ans;
    }
}
