/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
    List<Double> ret=new ArrayList<>();
         if (root == null) return ret;
        Queue<TreeNode> myqueue = new LinkedList<>();
        myqueue.offer(root);
        while(!myqueue.isEmpty()){
            int cnt=myqueue.size();
            double sum=0;
            for(int i=0;i<cnt;i++){
             TreeNode node =  myqueue.poll();
                sum+=node.val;
            if(node.left!=null) {myqueue.offer(node.left);}
            if(node.right!=null) {myqueue.offer(node.right);}}
            ret.add(sum/cnt);
        }
        return ret;
    }
}
